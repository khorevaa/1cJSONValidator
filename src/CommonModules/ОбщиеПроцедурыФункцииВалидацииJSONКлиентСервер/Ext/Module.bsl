
Процедура ДобавитьСообщениеОбОшибке(Знач ПутьКЭлементу, Знач ИмяЭлемента, Знач ТекстСообщения, СписокОшибок) Экспорт

	Если ЗначениеЗаполнено(ИмяЭлемента) Тогда
		
		Разделитель = РазделительЭлементов();	
		schemaPath = ПутьКЭлементу + Разделитель + ИмяЭлемента;
	Иначе
		
		schemaPath = ПутьКЭлементу
	КонецЕсли;		
	
	СтрокаОшибки = Новый Структура;
	СтрокаОшибки.Вставить("schemaPath", schemaPath);
	СтрокаОшибки.Вставить("message", ТекстСообщения);
	
	СписокОшибок.Добавить(СтрокаОшибки);
КонецПроцедуры

Функция СформироватьСтруктуруПоJSON(Знач СтрокаJSON) Экспорт

	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	
	Результат = ПрочитатьJSON(ЧтениеJSON, Истина);
		
	Возврат Результат;
КонецФункции

Функция СформироватьJSONПоСтруктуре(Знач ДанныеДляФормирования) Экспорт

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеДляФормирования);
	Результат = ЗаписьJSON.Закрыть();
	Возврат Результат;
КонецФункции

Функция КлючиКоллекцииКлючЗначение(Знач Коллекция) Экспорт

	Результат = Новый Массив;
	
	Если НЕ ТипЗнч(Коллекция) = Тип("Структура")
		И НЕ ТипЗнч(Коллекция) = Тип("Соответствие") Тогда
		
		Возврат Результат;
	КонецЕсли;
	
	Для каждого Элемент Из Коллекция Цикл
		
		Результат.Добавить(Элемент.Ключ);
	КонецЦикла;		
	
	Возврат Результат;
КонецФункции

Функция ФорматированныйОтвет(Знач ДанныеОтвета, Знач ФорматОтвета) Экспорт
	
	Результат = Новый Соответствие;
	Результат.Вставить("success", (ДанныеОтвета.Количество() = 0)); 
	Результат.Вставить("errors", ДанныеОтвета);

	СтрокаJSON = ПредопределенноеЗначение("Перечисление.ФорматыОтветаФункцииПроверки.СтрокаJSON");
	СтрокаJSONБезСпецСимволов = ПредопределенноеЗначение("Перечисление.ФорматыОтветаФункцииПроверки.СтрокаJSONБезСпецСимволов");
	
	Если ФорматОтвета = СтрокаJSON Тогда
		
		Результат = ОбщиеПроцедурыФункцииВалидацииJSONКлиентСервер.СформироватьJSONПоСтруктуре(Результат);
	ИначеЕсли ФорматОтвета = СтрокаJSONБезСпецСимволов Тогда
		
		СтрокаJSON = ОбщиеПроцедурыФункцииВалидацииJSONКлиентСервер.СформироватьJSONПоСтруктуре(Результат);
		Результат = СтроковыеФункцииКлиентСервер.СтрокаБезСпецСимволов(СтрокаJSON);
	КонецЕсли;		
	
	Возврат Результат;
КонецФункции

Функция РазделительЭлементов() Экспорт
	
	Результат = "/";
	Возврат Результат; 
КонецФункции

Функция СоответствиеТиповДанных() Экспорт

	ТипОбъект = ПредопределенноеЗначение("Перечисление.ТипыДанныхJSON.Объект");
	ТипСтрока = ПредопределенноеЗначение("Перечисление.ТипыДанныхJSON.Строка");
	ТипБулево = ПредопределенноеЗначение("Перечисление.ТипыДанныхJSON.Булево");
	ТипЦелоеЧисло = ПредопределенноеЗначение("Перечисление.ТипыДанныхJSON.ЦелоеЧисло");
	ТипЧислоСДробнойЧастью = ПредопределенноеЗначение("Перечисление.ТипыДанныхJSON.ЧислоСДробнойЧастью");
	ТипМассив = ПредопределенноеЗначение("Перечисление.ТипыДанныхJSON.Массив"); 
	
	Результат = Новый Структура;
	Результат.Вставить("object", ТипОбъект);
	Результат.Вставить("string", ТипСтрока);
	Результат.Вставить("boolean", ТипБулево);
	Результат.Вставить("integer", ТипЦелоеЧисло);
	Результат.Вставить("number", ТипЧислоСДробнойЧастью);
	Результат.Вставить("array", ТипМассив);
	
	Возврат Результат;
КонецФункции

Функция ПараметрыВалидации() Экспорт

	Результат = Новый Структура;
	
	Результат.Вставить("ТекущийУзел", "#");
	Результат.Вставить("ТекущаяСхема");
	Результат.Вставить("Значение");
	Результат.Вставить("СписокОшибок", Новый Массив);
	Результат.Вставить("ПереданныеСвойства", Новый Массив);
	Результат.Вставить("СоответствиеТипов", СоответствиеТиповДанных());
	
	Возврат Результат;
КонецФункции

